import { z } from 'zod';
declare const publicationScopeSchema: z.ZodObject<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - create: publish（publish時に publication が作成される）
     * - delete: unpublish（unpublish時に publication が削除される）
     * - updateMetadata: metadata の編集
     * - enable: enable
     * - disable: disable
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - create: publish（publish時に publication が作成される）
     * - delete: unpublish（unpublish時に publication が削除される）
     * - updateMetadata: metadata の編集
     * - enable: enable
     * - disable: disable
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - create: publish（publish時に publication が作成される）
     * - delete: unpublish（unpublish時に publication が削除される）
     * - updateMetadata: metadata の編集
     * - enable: enable
     * - disable: disable
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
}, z.ZodTypeAny, "passthrough">>;
export declare type PublicationScope = z.input<typeof publicationScopeSchema>;
declare const subscriptionScopeSchema: z.ZodObject<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - create: subscribe（subscribe時に subscription が作成される）
     * - delete: unsubscribe（unsubscribe時に subscription が削除される）
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - create: subscribe（subscribe時に subscription が作成される）
     * - delete: unsubscribe（unsubscribe時に subscription が削除される）
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - create: subscribe（subscribe時に subscription が作成される）
     * - delete: unsubscribe（unsubscribe時に subscription が削除される）
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
}, z.ZodTypeAny, "passthrough">>;
export declare type SubscriptionScope = z.input<typeof subscriptionScopeSchema>;
export declare const memberActions: readonly ["write", "create", "delete", "updateMetadata", "signal"];
declare const memberScopeSchema: z.ZodIntersection<z.ZodEffects<z.ZodObject<{
    /**
     * id (id または name のどちらかが必須 *)
     * - id で対象の member を指定
     * - '*' を指定することで、すべての member を指定
     */
    id: z.ZodOptional<z.ZodString>;
    /**
     * name (id または name のどちらかが必須 *)
     * - name で対象の channel を指定
     * - '*' を指定することで、すべての member を指定
     */
    name: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    id?: string | undefined;
    name?: string | undefined;
}, {
    id?: string | undefined;
    name?: string | undefined;
}>, {
    id?: string | undefined;
    name?: string | undefined;
}, {
    id?: string | undefined;
    name?: string | undefined;
}>, z.ZodObject<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - create: 入室（入室時に member が作成される）
     * - delete: 退室（入室時に member が削除される）
     * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
     * - updateMetadata: metadata の編集
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
    /**publication リソースに関するオブジェクトを指定*/
    publication: z.ZodOptional<z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: publish（publish時に publication が作成される）
         * - delete: unpublish（unpublish時に publication が削除される）
         * - updateMetadata: metadata の編集
         * - enable: enable
         * - disable: disable
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: publish（publish時に publication が作成される）
         * - delete: unpublish（unpublish時に publication が削除される）
         * - updateMetadata: metadata の編集
         * - enable: enable
         * - disable: disable
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: publish（publish時に publication が作成される）
         * - delete: unpublish（unpublish時に publication が削除される）
         * - updateMetadata: metadata の編集
         * - enable: enable
         * - disable: disable
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
    }, z.ZodTypeAny, "passthrough">>>;
    /**subscription リソースに関するオブジェクトを指定*/
    subscription: z.ZodOptional<z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: subscribe（subscribe時に subscription が作成される）
         * - delete: unsubscribe（unsubscribe時に subscription が削除される）
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: subscribe（subscribe時に subscription が作成される）
         * - delete: unsubscribe（unsubscribe時に subscription が削除される）
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: subscribe（subscribe時に subscription が作成される）
         * - delete: unsubscribe（unsubscribe時に subscription が削除される）
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">>>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - create: 入室（入室時に member が作成される）
     * - delete: 退室（入室時に member が削除される）
     * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
     * - updateMetadata: metadata の編集
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
    /**publication リソースに関するオブジェクトを指定*/
    publication: z.ZodOptional<z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: publish（publish時に publication が作成される）
         * - delete: unpublish（unpublish時に publication が削除される）
         * - updateMetadata: metadata の編集
         * - enable: enable
         * - disable: disable
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: publish（publish時に publication が作成される）
         * - delete: unpublish（unpublish時に publication が削除される）
         * - updateMetadata: metadata の編集
         * - enable: enable
         * - disable: disable
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: publish（publish時に publication が作成される）
         * - delete: unpublish（unpublish時に publication が削除される）
         * - updateMetadata: metadata の編集
         * - enable: enable
         * - disable: disable
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
    }, z.ZodTypeAny, "passthrough">>>;
    /**subscription リソースに関するオブジェクトを指定*/
    subscription: z.ZodOptional<z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: subscribe（subscribe時に subscription が作成される）
         * - delete: unsubscribe（unsubscribe時に subscription が削除される）
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: subscribe（subscribe時に subscription が作成される）
         * - delete: unsubscribe（unsubscribe時に subscription が削除される）
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: subscribe（subscribe時に subscription が作成される）
         * - delete: unsubscribe（unsubscribe時に subscription が削除される）
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">>>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - create: 入室（入室時に member が作成される）
     * - delete: 退室（入室時に member が削除される）
     * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
     * - updateMetadata: metadata の編集
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
    /**publication リソースに関するオブジェクトを指定*/
    publication: z.ZodOptional<z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: publish（publish時に publication が作成される）
         * - delete: unpublish（unpublish時に publication が削除される）
         * - updateMetadata: metadata の編集
         * - enable: enable
         * - disable: disable
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: publish（publish時に publication が作成される）
         * - delete: unpublish（unpublish時に publication が削除される）
         * - updateMetadata: metadata の編集
         * - enable: enable
         * - disable: disable
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: publish（publish時に publication が作成される）
         * - delete: unpublish（unpublish時に publication が削除される）
         * - updateMetadata: metadata の編集
         * - enable: enable
         * - disable: disable
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
    }, z.ZodTypeAny, "passthrough">>>;
    /**subscription リソースに関するオブジェクトを指定*/
    subscription: z.ZodOptional<z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: subscribe（subscribe時に subscription が作成される）
         * - delete: unsubscribe（unsubscribe時に subscription が削除される）
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: subscribe（subscribe時に subscription が作成される）
         * - delete: unsubscribe（unsubscribe時に subscription が削除される）
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: subscribe（subscribe時に subscription が作成される）
         * - delete: unsubscribe（unsubscribe時に subscription が削除される）
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">>>;
}, z.ZodTypeAny, "passthrough">>>;
export declare type MemberScope = z.input<typeof memberScopeSchema>;
declare const channelScopeSchema: z.ZodIntersection<z.ZodEffects<z.ZodObject<{
    /**
     * id (id または name のどちらかが必須 *)
     * - id で対象の member を指定
     * - '*' を指定することで、すべての member を指定
     */
    id: z.ZodOptional<z.ZodString>;
    /**
     * name (id または name のどちらかが必須 *)
     * - name で対象の channel を指定
     * - '*' を指定することで、すべての member を指定
     */
    name: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    id?: string | undefined;
    name?: string | undefined;
}, {
    id?: string | undefined;
    name?: string | undefined;
}>, {
    id?: string | undefined;
    name?: string | undefined;
}, {
    id?: string | undefined;
    name?: string | undefined;
}>, z.ZodObject<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - read: 参照
     * - create: 作成
     * - delete: 削除
     * - updateMetadata: metadata の編集
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
    /**member リソースに関するオブジェクトを配列で指定 */
    members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * id (id または name のどちらかが必須 *)
         * - id で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        id: z.ZodOptional<z.ZodString>;
        /**
         * name (id または name のどちらかが必須 *)
         * - name で対象の channel を指定
         * - '*' を指定することで、すべての member を指定
         */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: 入室（入室時に member が作成される）
         * - delete: 退室（入室時に member が削除される）
         * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
        /**publication リソースに関するオブジェクトを指定*/
        publication: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
        /**subscription リソースに関するオブジェクトを指定*/
        subscription: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: 入室（入室時に member が作成される）
         * - delete: 退室（入室時に member が削除される）
         * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
        /**publication リソースに関するオブジェクトを指定*/
        publication: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
        /**subscription リソースに関するオブジェクトを指定*/
        subscription: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: 入室（入室時に member が作成される）
         * - delete: 退室（入室時に member が削除される）
         * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
        /**publication リソースに関するオブジェクトを指定*/
        publication: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
        /**subscription リソースに関するオブジェクトを指定*/
        subscription: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
    }, z.ZodTypeAny, "passthrough">>>, "many">;
    /**sfuBot リソースに関するオブジェクトを配列で指定 */
    sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        forwardings: z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        forwardings: z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        forwardings: z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">;
    }, z.ZodTypeAny, "passthrough">>, "many">>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - read: 参照
     * - create: 作成
     * - delete: 削除
     * - updateMetadata: metadata の編集
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
    /**member リソースに関するオブジェクトを配列で指定 */
    members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * id (id または name のどちらかが必須 *)
         * - id で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        id: z.ZodOptional<z.ZodString>;
        /**
         * name (id または name のどちらかが必須 *)
         * - name で対象の channel を指定
         * - '*' を指定することで、すべての member を指定
         */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: 入室（入室時に member が作成される）
         * - delete: 退室（入室時に member が削除される）
         * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
        /**publication リソースに関するオブジェクトを指定*/
        publication: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
        /**subscription リソースに関するオブジェクトを指定*/
        subscription: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: 入室（入室時に member が作成される）
         * - delete: 退室（入室時に member が削除される）
         * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
        /**publication リソースに関するオブジェクトを指定*/
        publication: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
        /**subscription リソースに関するオブジェクトを指定*/
        subscription: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: 入室（入室時に member が作成される）
         * - delete: 退室（入室時に member が削除される）
         * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
        /**publication リソースに関するオブジェクトを指定*/
        publication: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
        /**subscription リソースに関するオブジェクトを指定*/
        subscription: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
    }, z.ZodTypeAny, "passthrough">>>, "many">;
    /**sfuBot リソースに関するオブジェクトを配列で指定 */
    sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        forwardings: z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        forwardings: z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        forwardings: z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">;
    }, z.ZodTypeAny, "passthrough">>, "many">>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**
     * 以下を複数指定可能
     * - write: すべて可能
     * - read: 参照
     * - create: 作成
     * - delete: 削除
     * - updateMetadata: metadata の編集
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
    /**member リソースに関するオブジェクトを配列で指定 */
    members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * id (id または name のどちらかが必須 *)
         * - id で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        id: z.ZodOptional<z.ZodString>;
        /**
         * name (id または name のどちらかが必須 *)
         * - name で対象の channel を指定
         * - '*' を指定することで、すべての member を指定
         */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: 入室（入室時に member が作成される）
         * - delete: 退室（入室時に member が削除される）
         * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
        /**publication リソースに関するオブジェクトを指定*/
        publication: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
        /**subscription リソースに関するオブジェクトを指定*/
        subscription: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: 入室（入室時に member が作成される）
         * - delete: 退室（入室時に member が削除される）
         * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
        /**publication リソースに関するオブジェクトを指定*/
        publication: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
        /**subscription リソースに関するオブジェクトを指定*/
        subscription: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - create: 入室（入室時に member が作成される）
         * - delete: 退室（入室時に member が削除される）
         * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
        /**publication リソースに関するオブジェクトを指定*/
        publication: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: publish（publish時に publication が作成される）
             * - delete: unpublish（unpublish時に publication が削除される）
             * - updateMetadata: metadata の編集
             * - enable: enable
             * - disable: disable
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
        /**subscription リソースに関するオブジェクトを指定*/
        subscription: z.ZodOptional<z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: subscribe（subscribe時に subscription が作成される）
             * - delete: unsubscribe（unsubscribe時に subscription が削除される）
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>>;
    }, z.ZodTypeAny, "passthrough">>>, "many">;
    /**sfuBot リソースに関するオブジェクトを配列で指定 */
    sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        forwardings: z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        forwardings: z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        forwardings: z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">;
    }, z.ZodTypeAny, "passthrough">>, "many">>;
}, z.ZodTypeAny, "passthrough">>>;
export declare type ChannelScope = z.input<typeof channelScopeSchema>;
/**@internal */
export declare const appScopeSchema: z.ZodObject<{
    /**アプリケーションIDを指定 */
    id: z.ZodString;
    /**AnalyticsDashboardへのデータ送信をするかどうかの設定 */
    analytics: z.ZodOptional<z.ZodBoolean>;
    /**アプリケーション自体に関する権限。現在は'read'固定 */
    actions: z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodEnum<["listChannels", "read", "write"]>, "write" | "read" | "listChannels", "write" | "read" | "listChannels">, "many">>;
    /**channelリソースに関するオブジェクトを配列で指定*/
    channels: z.ZodOptional<z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * id (id または name のどちらかが必須 *)
         * - id で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        id: z.ZodOptional<z.ZodString>;
        /**
         * name (id または name のどちらかが必須 *)
         * - name で対象の channel を指定
         * - '*' を指定することで、すべての member を指定
         */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - read: 参照
         * - create: 作成
         * - delete: 削除
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
        /**member リソースに関するオブジェクトを配列で指定 */
        members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の channel を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">>>, "many">;
        /**sfuBot リソースに関するオブジェクトを配列で指定 */
        sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - read: 参照
         * - create: 作成
         * - delete: 削除
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
        /**member リソースに関するオブジェクトを配列で指定 */
        members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の channel を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">>>, "many">;
        /**sfuBot リソースに関するオブジェクトを配列で指定 */
        sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - read: 参照
         * - create: 作成
         * - delete: 削除
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
        /**member リソースに関するオブジェクトを配列で指定 */
        members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の channel を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">>>, "many">;
        /**sfuBot リソースに関するオブジェクトを配列で指定 */
        sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">>;
    }, z.ZodTypeAny, "passthrough">>>, "many">>;
    /**falseの場合はTurnサーバを経由してメディア通信を行いません。 */
    turn: z.ZodOptional<z.ZodBoolean>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**アプリケーションIDを指定 */
    id: z.ZodString;
    /**AnalyticsDashboardへのデータ送信をするかどうかの設定 */
    analytics: z.ZodOptional<z.ZodBoolean>;
    /**アプリケーション自体に関する権限。現在は'read'固定 */
    actions: z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodEnum<["listChannels", "read", "write"]>, "write" | "read" | "listChannels", "write" | "read" | "listChannels">, "many">>;
    /**channelリソースに関するオブジェクトを配列で指定*/
    channels: z.ZodOptional<z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * id (id または name のどちらかが必須 *)
         * - id で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        id: z.ZodOptional<z.ZodString>;
        /**
         * name (id または name のどちらかが必須 *)
         * - name で対象の channel を指定
         * - '*' を指定することで、すべての member を指定
         */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - read: 参照
         * - create: 作成
         * - delete: 削除
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
        /**member リソースに関するオブジェクトを配列で指定 */
        members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の channel を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">>>, "many">;
        /**sfuBot リソースに関するオブジェクトを配列で指定 */
        sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - read: 参照
         * - create: 作成
         * - delete: 削除
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
        /**member リソースに関するオブジェクトを配列で指定 */
        members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の channel を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">>>, "many">;
        /**sfuBot リソースに関するオブジェクトを配列で指定 */
        sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - read: 参照
         * - create: 作成
         * - delete: 削除
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
        /**member リソースに関するオブジェクトを配列で指定 */
        members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の channel を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">>>, "many">;
        /**sfuBot リソースに関するオブジェクトを配列で指定 */
        sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">>;
    }, z.ZodTypeAny, "passthrough">>>, "many">>;
    /**falseの場合はTurnサーバを経由してメディア通信を行いません。 */
    turn: z.ZodOptional<z.ZodBoolean>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**アプリケーションIDを指定 */
    id: z.ZodString;
    /**AnalyticsDashboardへのデータ送信をするかどうかの設定 */
    analytics: z.ZodOptional<z.ZodBoolean>;
    /**アプリケーション自体に関する権限。現在は'read'固定 */
    actions: z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodEnum<["listChannels", "read", "write"]>, "write" | "read" | "listChannels", "write" | "read" | "listChannels">, "many">>;
    /**channelリソースに関するオブジェクトを配列で指定*/
    channels: z.ZodOptional<z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * id (id または name のどちらかが必須 *)
         * - id で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        id: z.ZodOptional<z.ZodString>;
        /**
         * name (id または name のどちらかが必須 *)
         * - name で対象の channel を指定
         * - '*' を指定することで、すべての member を指定
         */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - read: 参照
         * - create: 作成
         * - delete: 削除
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
        /**member リソースに関するオブジェクトを配列で指定 */
        members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の channel を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">>>, "many">;
        /**sfuBot リソースに関するオブジェクトを配列で指定 */
        sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - read: 参照
         * - create: 作成
         * - delete: 削除
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
        /**member リソースに関するオブジェクトを配列で指定 */
        members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の channel を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">>>, "many">;
        /**sfuBot リソースに関するオブジェクトを配列で指定 */
        sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: すべて可能
         * - read: 参照
         * - create: 作成
         * - delete: 削除
         * - updateMetadata: metadata の編集
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "read", "create", "delete", "updateMetadata"]>, "create" | "write" | "delete" | "updateMetadata" | "read", "create" | "write" | "delete" | "updateMetadata" | "read">, "many">;
        /**member リソースに関するオブジェクトを配列で指定 */
        members: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の channel を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - write: すべて可能
             * - create: 入室（入室時に member が作成される）
             * - delete: 退室（入室時に member が削除される）
             * - signal: シグナリング情報のやり取り (p2p通信を利用する際に必須)
             * - updateMetadata: metadata の編集
             */
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "signal"]>, "create" | "write" | "delete" | "updateMetadata" | "signal", "create" | "write" | "delete" | "updateMetadata" | "signal">, "many">;
            /**publication リソースに関するオブジェクトを指定*/
            publication: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: publish（publish時に publication が作成される）
                 * - delete: unpublish（unpublish時に publication が削除される）
                 * - updateMetadata: metadata の編集
                 * - enable: enable
                 * - disable: disable
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete", "updateMetadata", "enable", "disable"]>, "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable", "create" | "write" | "delete" | "updateMetadata" | "enable" | "disable">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
            /**subscription リソースに関するオブジェクトを指定*/
            subscription: z.ZodOptional<z.ZodObject<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                /**
                 * 以下を複数指定可能
                 * - write: すべて可能
                 * - create: subscribe（subscribe時に subscription が作成される）
                 * - delete: unsubscribe（unsubscribe時に subscription が削除される）
                 */
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["write", "create", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>>;
        }, z.ZodTypeAny, "passthrough">>>, "many">;
        /**sfuBot リソースに関するオブジェクトを配列で指定 */
        sfuBots: z.ZodOptional<z.ZodArray<z.ZodObject<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            forwardings: z.ZodArray<z.ZodObject<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
                actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
            }, z.ZodTypeAny, "passthrough">>, "many">;
        }, z.ZodTypeAny, "passthrough">>, "many">>;
    }, z.ZodTypeAny, "passthrough">>>, "many">>;
    /**falseの場合はTurnサーバを経由してメディア通信を行いません。 */
    turn: z.ZodOptional<z.ZodBoolean>;
}, z.ZodTypeAny, "passthrough">>;
export declare type AppScope = z.input<typeof appScopeSchema>;
export {};
//# sourceMappingURL=v1-2.d.ts.map