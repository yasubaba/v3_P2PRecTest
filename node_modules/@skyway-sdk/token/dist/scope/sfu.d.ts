import { z } from 'zod';
declare const forwardingScopeSchema: z.ZodObject<{
    /**
     * 以下を複数指定可能
     * - write: Forwarding のすべての操作
     * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
     * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**
     * 以下を複数指定可能
     * - write: Forwarding のすべての操作
     * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
     * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**
     * 以下を複数指定可能
     * - write: Forwarding のすべての操作
     * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
     * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
}, z.ZodTypeAny, "passthrough">>;
export declare type ForwardingScope = z.input<typeof forwardingScopeSchema>;
/**@internal */
export declare const sfuScopeSchema: z.ZodObject<{
    /**
     * 以下を複数指定可能
     * - write: SFU Bot のすべての操作をすることができる
     * - create: SFU Bot の作成ができる
     * - delete: SFU Bot の削除ができる
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    /**forwarding リソースに関するオブジェクトを指定（forwardingオブジェクトについては後述） */
    forwardings: z.ZodArray<z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: Forwarding のすべての操作
         * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
         * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: Forwarding のすべての操作
         * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
         * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: Forwarding のすべての操作
         * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
         * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">>, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**
     * 以下を複数指定可能
     * - write: SFU Bot のすべての操作をすることができる
     * - create: SFU Bot の作成ができる
     * - delete: SFU Bot の削除ができる
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    /**forwarding リソースに関するオブジェクトを指定（forwardingオブジェクトについては後述） */
    forwardings: z.ZodArray<z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: Forwarding のすべての操作
         * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
         * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: Forwarding のすべての操作
         * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
         * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: Forwarding のすべての操作
         * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
         * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">>, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**
     * 以下を複数指定可能
     * - write: SFU Bot のすべての操作をすることができる
     * - create: SFU Bot の作成ができる
     * - delete: SFU Bot の削除ができる
     */
    actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    /**forwarding リソースに関するオブジェクトを指定（forwardingオブジェクトについては後述） */
    forwardings: z.ZodArray<z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - write: Forwarding のすべての操作
         * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
         * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - write: Forwarding のすべての操作
         * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
         * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - write: Forwarding のすべての操作
         * - create: Forwarding の作成 (任意のメディアをSFU経由で新たに転送することができる)
         * - delete: Forwarding の削除 (SFU経由でのメディア転送を取りやめることができる)
         */
        actions: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "write", "delete"]>, "create" | "write" | "delete", "create" | "write" | "delete">, "many">;
    }, z.ZodTypeAny, "passthrough">>, "many">;
}, z.ZodTypeAny, "passthrough">>;
export declare type SfuScope = z.input<typeof sfuScopeSchema>;
export {};
//# sourceMappingURL=sfu.d.ts.map