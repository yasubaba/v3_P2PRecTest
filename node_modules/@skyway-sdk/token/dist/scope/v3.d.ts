import { z } from 'zod';
declare const memberScopeV3Schema: z.ZodIntersection<z.ZodEffects<z.ZodObject<{
    /**
     * id (id または name のどちらかが必須 *)
     * - id で対象の member を指定
     * - '*' を指定することで、すべての member を指定
     */
    id: z.ZodOptional<z.ZodString>;
    /**
     * name (id または name のどちらかが必須 *)
     * - name で対象の member を指定
     * - '*' を指定することで、すべての member を指定
     */
    name: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    id?: string | undefined;
    name?: string | undefined;
}, {
    id?: string | undefined;
    name?: string | undefined;
}>, {
    id?: string | undefined;
    name?: string | undefined;
}, {
    id?: string | undefined;
    name?: string | undefined;
}>, z.ZodObject<{
    /**
     * 以下を複数指定可能
     * - publish: media/dataのpublish
     * - subscribe: media/dataのsubscribe
     * - updateMetadata: metadata の編集
     */
    methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**
     * 以下を複数指定可能
     * - publish: media/dataのpublish
     * - subscribe: media/dataのsubscribe
     * - updateMetadata: metadata の編集
     */
    methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**
     * 以下を複数指定可能
     * - publish: media/dataのpublish
     * - subscribe: media/dataのsubscribe
     * - updateMetadata: metadata の編集
     */
    methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
}, z.ZodTypeAny, "passthrough">>>;
export declare type MemberScopeV3 = z.input<typeof memberScopeV3Schema>;
declare const roomScopeV3Schema: z.ZodIntersection<z.ZodEffects<z.ZodObject<{
    /**
     * - id または name のどちらかが必須。
     * - id で対象の room を指定。
     * - '*' を指定することで、すべての room を指定。
     * */
    id: z.ZodOptional<z.ZodString>;
    /**
     * - id または name のどちらかが必須。
     * - name で対象の room を指定。
     * - '*' を指定することで、すべての room を指定。
     * */
    name: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    id?: string | undefined;
    name?: string | undefined;
}, {
    id?: string | undefined;
    name?: string | undefined;
}>, {
    id?: string | undefined;
    name?: string | undefined;
}, {
    id?: string | undefined;
    name?: string | undefined;
}>, z.ZodObject<{
    /**
     * 以下を複数指定可能
     * - create: 作成
     * - close: 削除
     * - updateMetadata: metadata の編集
     */
    methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
    /** memberリソースに関するオブジェクトを指定 */
    member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * id (id または name のどちらかが必須 *)
         * - id で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        id: z.ZodOptional<z.ZodString>;
        /**
         * name (id または name のどちらかが必須 *)
         * - name で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - publish: media/dataのpublish
         * - subscribe: media/dataのsubscribe
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - publish: media/dataのpublish
         * - subscribe: media/dataのsubscribe
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - publish: media/dataのpublish
         * - subscribe: media/dataのsubscribe
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
    }, z.ZodTypeAny, "passthrough">>>>;
    sfu: z.ZodOptional<z.ZodObject<{
        /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
        enabled: z.ZodOptional<z.ZodBoolean>;
        /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
        maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
        maxSubscribersLimit?: number | undefined;
    }, {
        enabled?: boolean | undefined;
        maxSubscribersLimit?: number | undefined;
    }>>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**
     * 以下を複数指定可能
     * - create: 作成
     * - close: 削除
     * - updateMetadata: metadata の編集
     */
    methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
    /** memberリソースに関するオブジェクトを指定 */
    member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * id (id または name のどちらかが必須 *)
         * - id で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        id: z.ZodOptional<z.ZodString>;
        /**
         * name (id または name のどちらかが必須 *)
         * - name で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - publish: media/dataのpublish
         * - subscribe: media/dataのsubscribe
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - publish: media/dataのpublish
         * - subscribe: media/dataのsubscribe
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - publish: media/dataのpublish
         * - subscribe: media/dataのsubscribe
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
    }, z.ZodTypeAny, "passthrough">>>>;
    sfu: z.ZodOptional<z.ZodObject<{
        /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
        enabled: z.ZodOptional<z.ZodBoolean>;
        /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
        maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
        maxSubscribersLimit?: number | undefined;
    }, {
        enabled?: boolean | undefined;
        maxSubscribersLimit?: number | undefined;
    }>>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**
     * 以下を複数指定可能
     * - create: 作成
     * - close: 削除
     * - updateMetadata: metadata の編集
     */
    methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
    /** memberリソースに関するオブジェクトを指定 */
    member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * id (id または name のどちらかが必須 *)
         * - id で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        id: z.ZodOptional<z.ZodString>;
        /**
         * name (id または name のどちらかが必須 *)
         * - name で対象の member を指定
         * - '*' を指定することで、すべての member を指定
         */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - publish: media/dataのpublish
         * - subscribe: media/dataのsubscribe
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - publish: media/dataのpublish
         * - subscribe: media/dataのsubscribe
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - publish: media/dataのpublish
         * - subscribe: media/dataのsubscribe
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
    }, z.ZodTypeAny, "passthrough">>>>;
    sfu: z.ZodOptional<z.ZodObject<{
        /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
        enabled: z.ZodOptional<z.ZodBoolean>;
        /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
        maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
        maxSubscribersLimit?: number | undefined;
    }, {
        enabled?: boolean | undefined;
        maxSubscribersLimit?: number | undefined;
    }>>;
}, z.ZodTypeAny, "passthrough">>>;
export declare type RoomScopeV3 = z.input<typeof roomScopeV3Schema>;
/**@internal */
export declare const scopeV3Schema: z.ZodObject<{
    /**アプリケーションIDを指定 */
    appId: z.ZodString;
    /**AnalyticsDashboardへのデータ送信をするかどうかの設定。指定しない場合は enabled: true として扱われる。 */
    analytics: z.ZodOptional<z.ZodObject<{
        enabled: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
    }, {
        enabled?: boolean | undefined;
    }>>;
    /**TURNサーバー利用の設定。enabledがfalseの場合はTURNサーバーを経由してメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
    turn: z.ZodOptional<z.ZodObject<{
        enabled: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
    }, {
        enabled?: boolean | undefined;
    }>>;
    /**roomリソースに関するオブジェクトを配列で指定*/
    rooms: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * - id または name のどちらかが必須。
         * - id で対象の room を指定。
         * - '*' を指定することで、すべての room を指定。
         * */
        id: z.ZodOptional<z.ZodString>;
        /**
         * - id または name のどちらかが必須。
         * - name で対象の room を指定。
         * - '*' を指定することで、すべての room を指定。
         * */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - create: 作成
         * - close: 削除
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
        /** memberリソースに関するオブジェクトを指定 */
        member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">>>>;
        sfu: z.ZodOptional<z.ZodObject<{
            /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
            enabled: z.ZodOptional<z.ZodBoolean>;
            /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
            maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }>>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - create: 作成
         * - close: 削除
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
        /** memberリソースに関するオブジェクトを指定 */
        member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">>>>;
        sfu: z.ZodOptional<z.ZodObject<{
            /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
            enabled: z.ZodOptional<z.ZodBoolean>;
            /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
            maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }>>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - create: 作成
         * - close: 削除
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
        /** memberリソースに関するオブジェクトを指定 */
        member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">>>>;
        sfu: z.ZodOptional<z.ZodObject<{
            /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
            enabled: z.ZodOptional<z.ZodBoolean>;
            /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
            maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }>>;
    }, z.ZodTypeAny, "passthrough">>>, "many">;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    /**アプリケーションIDを指定 */
    appId: z.ZodString;
    /**AnalyticsDashboardへのデータ送信をするかどうかの設定。指定しない場合は enabled: true として扱われる。 */
    analytics: z.ZodOptional<z.ZodObject<{
        enabled: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
    }, {
        enabled?: boolean | undefined;
    }>>;
    /**TURNサーバー利用の設定。enabledがfalseの場合はTURNサーバーを経由してメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
    turn: z.ZodOptional<z.ZodObject<{
        enabled: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
    }, {
        enabled?: boolean | undefined;
    }>>;
    /**roomリソースに関するオブジェクトを配列で指定*/
    rooms: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * - id または name のどちらかが必須。
         * - id で対象の room を指定。
         * - '*' を指定することで、すべての room を指定。
         * */
        id: z.ZodOptional<z.ZodString>;
        /**
         * - id または name のどちらかが必須。
         * - name で対象の room を指定。
         * - '*' を指定することで、すべての room を指定。
         * */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - create: 作成
         * - close: 削除
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
        /** memberリソースに関するオブジェクトを指定 */
        member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">>>>;
        sfu: z.ZodOptional<z.ZodObject<{
            /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
            enabled: z.ZodOptional<z.ZodBoolean>;
            /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
            maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }>>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - create: 作成
         * - close: 削除
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
        /** memberリソースに関するオブジェクトを指定 */
        member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">>>>;
        sfu: z.ZodOptional<z.ZodObject<{
            /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
            enabled: z.ZodOptional<z.ZodBoolean>;
            /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
            maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }>>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - create: 作成
         * - close: 削除
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
        /** memberリソースに関するオブジェクトを指定 */
        member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">>>>;
        sfu: z.ZodOptional<z.ZodObject<{
            /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
            enabled: z.ZodOptional<z.ZodBoolean>;
            /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
            maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }>>;
    }, z.ZodTypeAny, "passthrough">>>, "many">;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    /**アプリケーションIDを指定 */
    appId: z.ZodString;
    /**AnalyticsDashboardへのデータ送信をするかどうかの設定。指定しない場合は enabled: true として扱われる。 */
    analytics: z.ZodOptional<z.ZodObject<{
        enabled: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
    }, {
        enabled?: boolean | undefined;
    }>>;
    /**TURNサーバー利用の設定。enabledがfalseの場合はTURNサーバーを経由してメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
    turn: z.ZodOptional<z.ZodObject<{
        enabled: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        enabled?: boolean | undefined;
    }, {
        enabled?: boolean | undefined;
    }>>;
    /**roomリソースに関するオブジェクトを配列で指定*/
    rooms: z.ZodArray<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
        /**
         * - id または name のどちらかが必須。
         * - id で対象の room を指定。
         * - '*' を指定することで、すべての room を指定。
         * */
        id: z.ZodOptional<z.ZodString>;
        /**
         * - id または name のどちらかが必須。
         * - name で対象の room を指定。
         * - '*' を指定することで、すべての room を指定。
         * */
        name: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, {
        id?: string | undefined;
        name?: string | undefined;
    }, {
        id?: string | undefined;
        name?: string | undefined;
    }>, z.ZodObject<{
        /**
         * 以下を複数指定可能
         * - create: 作成
         * - close: 削除
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
        /** memberリソースに関するオブジェクトを指定 */
        member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">>>>;
        sfu: z.ZodOptional<z.ZodObject<{
            /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
            enabled: z.ZodOptional<z.ZodBoolean>;
            /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
            maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }>>;
    }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
        /**
         * 以下を複数指定可能
         * - create: 作成
         * - close: 削除
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
        /** memberリソースに関するオブジェクトを指定 */
        member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">>>>;
        sfu: z.ZodOptional<z.ZodObject<{
            /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
            enabled: z.ZodOptional<z.ZodBoolean>;
            /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
            maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }>>;
    }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
        /**
         * 以下を複数指定可能
         * - create: 作成
         * - close: 削除
         * - updateMetadata: metadata の編集
         */
        methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["create", "close", "updateMetadata"]>, "create" | "updateMetadata" | "close", "create" | "updateMetadata" | "close">, "many">;
        /** memberリソースに関するオブジェクトを指定 */
        member: z.ZodOptional<z.ZodIntersection<z.ZodEffects<z.ZodObject<{
            /**
             * id (id または name のどちらかが必須 *)
             * - id で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            id: z.ZodOptional<z.ZodString>;
            /**
             * name (id または name のどちらかが必須 *)
             * - name で対象の member を指定
             * - '*' を指定することで、すべての member を指定
             */
            name: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, {
            id?: string | undefined;
            name?: string | undefined;
        }, {
            id?: string | undefined;
            name?: string | undefined;
        }>, z.ZodObject<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, "passthrough", z.ZodTypeAny, z.objectOutputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">, z.objectInputType<{
            /**
             * 以下を複数指定可能
             * - publish: media/dataのpublish
             * - subscribe: media/dataのsubscribe
             * - updateMetadata: metadata の編集
             */
            methods: z.ZodArray<z.ZodEffects<z.ZodEnum<["publish", "subscribe", "updateMetadata"]>, "updateMetadata" | "publish" | "subscribe", "updateMetadata" | "publish" | "subscribe">, "many">;
        }, z.ZodTypeAny, "passthrough">>>>;
        sfu: z.ZodOptional<z.ZodObject<{
            /**SFUサーバーの利用有無。enabledがfalseの場合はSFUサーバーを利用したメディア通信を行わない。指定しない場合は enabled: true として扱われる。 */
            enabled: z.ZodOptional<z.ZodBoolean>;
            /**maxSubscribersの上限値の設定。指定しない場合はSFUサーバー側において設定可能な上限値になる。*/
            maxSubscribersLimit: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }, {
            enabled?: boolean | undefined;
            maxSubscribersLimit?: number | undefined;
        }>>;
    }, z.ZodTypeAny, "passthrough">>>, "many">;
}, z.ZodTypeAny, "passthrough">>;
export declare type ScopeV3 = z.input<typeof scopeV3Schema>;
export {};
//# sourceMappingURL=v3.d.ts.map